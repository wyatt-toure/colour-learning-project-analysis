[
["index.html", "Analysis for Biases in learned foraging preferences for coloured objects in Trinidadian guppies 1 Background", " Analysis for Biases in learned foraging preferences for coloured objects in Trinidadian guppies Wyatt Toure Date of this version: 2021-01-03 1 Background This site contains the full code and model outputs, and residual diagnostics for the analysis demonstrated in the manuscript 'Bias in the shift of foraging preference for coloured objects in Trinidadian guppies, Poecilia reticulata'. "],
["model-1-preference-for-the-green-object-at-baseline.html", "2 Model 1 - Preference for the green object at baseline", " 2 Model 1 - Preference for the green object at baseline This first model contains the data for all individual guppies. I looked at the green object preference of all guppies in an intercept only model to see if the green object preference at baseline was significantly different from zero. baseline.data.model = lm(green.object.preference ~ 1, data = baseline.data) At baseline, there was no significant preference for the green object preference across all guppies (p = 0.727). term estimate std.error statistic p.value (Intercept) 1.064679 3.00754 0.3540034 0.727 "],
["model-2-preference-for-the-rewarding-object-during-training.html", "3 Model 2 - Preference for the rewarding object during training", " 3 Model 2 - Preference for the rewarding object during training To see whether fish were responsive during training our second model asks whether the preference for the rewarding object changes throughout training between the treatments. training.data.model = lmer(rewarding.object.preference ~ rewarding.object.colour * trial + (1 | id), data = training.data) term estimate std.error statistic df p.value rewarding.object.colourgreen 55.9885527 27.340786 2.0478033 47.15948 0.046 trial 7.6998004 1.084800 7.0979013 438.05233 &lt; .001 rewarding.object.colourgreen:trial -0.5487883 1.490061 -0.3682991 434.79210 0.713 Throughout training, over the 20 trials, guppies increased their relative preference for the rewarded object by 7.7 seconds each trial (Figure 3.1, p &lt; .001). Figure 3.1: Preference for the green object in both treatments. Negative values represent more time spent with the blue object, positive values indicate more time spent with the green object. Faded lines connect individuals across trials and solid lines represents a linear fit with 95% CI (grey shading). "],
["model-3-preference-for-the-rewarded-object-during-testing-depending-on-treatment.html", "4 Model 3 - Preference for the rewarded object during testing depending on treatment", " 4 Model 3 - Preference for the rewarded object during testing depending on treatment For the main effects of training and rewarding object colour on object preference I fit a linear mixed effects model with fixed effects of trial and rewarding object colour and a random effect of individual id. My third model asks whether the preference for the rewarding object changed between baseline and final test and looks for an interaction with rewarded object colour. In this model trial is a categorical variable composed of the intial preference trial (trial 0) and the final preference trial (trial 21). test.data.model = lmer(rewarding.object.preference ~ rewarding.object.colour * trial + (1 | id), data = test.data) term estimate std.error statistic df p.value rewarding.object.colourgreen 1.644943 16.31541 0.1008214 39.90828 0.92 trial21 17.697361 16.62739 1.0643497 19.99995 0.3 rewarding.object.colourgreen:trial21 65.350597 22.51360 2.9027170 19.99995 0.009 I found a significant interaction effect between trial and rewarding object colour (p = 0.009). Guppies that had green rewarded had a rewarded object preference that was 65.4 seconds stronger than the rewarded object preference of guppies trained to blue (Figure 4.1). Figure 4.1: The initial and final rewarding object preference. Dashed line represents the no preference value. Data are means +/- 95% CI. Bold line connects means across trials. Post-hoc pairwise comparisons investigating the differences between treatments based on whether guppies are untrained or trained reveals that initially there was no difference in the strength of preference for the rewarding object between the treatments (blue-trained guppies had a blue object preference of 1.8 seconds and green-trained guppies had a green object preference of 3.5 seconds, p = 1). Comparing the shift in rewarding object preference between initial and final preference tests in blue-trained and green-trained guppies reveals that the shift in rewarding object preference is significant for green-trained guppies but not for blue-trained guppies. Green trained guppies increased their preference for the green object by 83 seconds (going from a green object preference of 3.5 seconds initially to 86.5 seconds at final test, p &lt; .001) whereas blue-trained guppies non-significantly increased their preference for the blue object by 17.7 seconds (going from a blue object preference 1.8 seconds initially to 19.5 seconds at final test, p = 0.714). For a full description of post-hoc comparisons see table 4.1. Overall I find that: Green-trained guppies increased their preference for the green object. Blue-trained guppies non-significantly increased their preference for the blue object. Table 4.1: Table of post-hoc tests with Tukey adjustment for multiple comparisons. The numbers represent the initial test trial (0) and the final test trial (21). The colour corressponds to the identity of the rewarding object (blue for blue-trained guppies, green for green-trained guppies). Values are all rounded to 3 decimal places. Significant p-values are bolded. contrast estimate df lower.CL upper.CL p.value 0 blue - 21 blue -17.697 20.000 -64.236 28.842 0.714 0 blue - 0 green -1.645 39.908 -45.381 42.092 1 0 blue - 21 green -84.693 39.908 -128.429 -40.956 &lt; .001 21 blue - 0 green 16.052 39.908 -27.684 59.789 0.759 21 blue - 21 green -66.996 39.908 -110.732 -23.259 0.001 0 green - 21 green -83.048 20.000 -125.532 -40.564 &lt; .001 Testing blue-trained guppies separately It does look like blue trained guppies are shifting their preference slightly but the effect might be getting drowned out by the large shift in preference of green-trained guppies so I looked at blue-trained guppies alone in a separate model. blue.guppies.test.data = test.data %&gt;% filter(rewarding.object.colour == &#39;blue&#39;) blue.guppies.test.data.model = lm(rewarding.object.preference ~ trial, data = blue.guppies.test.data) term estimate std.error statistic p.value (Intercept) 1.841809 7.466217 0.2466857 0.808 trial21 17.697361 10.558825 1.6760729 0.111 We see that the shift in preference between baseline trial and the final trial is still not significant (p = 0.111) in blue trained guppies though there seems to be a definite trend and the effect is in the expected direction. The random effect of ID was dropped here since it led to a singular fit, there was much more residual variance compared to individual variance, ID random effect did not significantly improve model fit. "],
["model-4-preference-for-the-rewarded-object-during-training-based-on-feeding.html", "5 Model 4 - Preference for the rewarded object during training based on feeding", " 5 Model 4 - Preference for the rewarded object during training based on feeding It might be the case that some fish behaved in a way that was not conducive to learning the association during training. My fourth model asks whether the time spent near the rewarding object during a training session is influenced by whether a fish ate or not. Here trial is a variable containing the training trials (1-20). It is supplied as a random effect along with individual ID in the model. training.data.model.rewarding.object = lmer(rewarding.object.preference ~ ate + (1 | id) + (1 | trial), data = training.data) term estimate std.error statistic df p.value ateyes 91.18488 10.95274 8.325303 223.7498 &lt; .001 Throughout all of training, fish that ate during a session spent on average 91.2 more seconds near the rewarded object compared to fish that did not eat (Figure, 5.1, p &lt; .001). Fish that spent more trials eating may therefore have received more reinforcement for the object-food association. Figure 5.1: Preference for the rewarding object during training based on whether an individual ate during a trial or not. Dashed line represents the no preference value. Data are means +/- 95% CI. "],
["model-5-is-there-a-difference-in-feeding-attempts-between-treatments.html", "6 Model 5 - Is there a difference in feeding attempts between treatments?", " 6 Model 5 - Is there a difference in feeding attempts between treatments? A discrepancy in reinforcement between treatments may influence performance on a final preference test. To see whether there was a difference in feeding between treatments I counted the number of trials in which an individual fish ate throughout all of training and compared the feeding counts between treatments. To do this I fit a generalized linear model with a Poisson distribution. The response variable 'feeding count' is a sum of the number of trials in which a guppy ate. feeding.data.model = glm(feeding.count ~ rewarding.object.colour, family = &quot;poisson&quot;, data = my.feeding.data) term estimate std.error statistic p.value rewarding.object.colourgreen 0.0709929 0.1264991 0.5612126 0.575 I found no significant difference in the amount of feeding done by individuals trained to green versus individuals trained to blue (Figure 6.1, p = 0.575) which suggests that the observed group-level differences in final test performance between blue-trained guppies versus green-trained guppies cannot be explained by differences in performance during training. Figure 6.1: Average number of trials in which a fish fed during training. Data are means +/- 95% confidence intervals "],
["model-6-what-if-i-control-for-feeding-count.html", "7 Model 6 - What if I control for feeding count?", " 7 Model 6 - What if I control for feeding count? test.data.feeding.controlled.model = lm(rewarding.object.preference ~ trial * rewarding.object.colour + feeding.count, data = test.feeding.data) term estimate std.error statistic p.value trial21 17.6973610 16.880360 1.0483995 0.301 rewarding.object.colourgreen 0.5377365 16.183195 0.0332281 0.974 feeding.count 1.3557636 1.020662 1.3283182 0.192 trial21:rewarding.object.colourgreen 65.3505973 22.856116 2.8592171 0.007 Nothing changes if I control for feeding count. The above model is the feeding controlled model. Below we have the non-feeding-count controlled model from earlier. term estimate std.error statistic df p.value rewarding.object.colourgreen 1.644943 16.31541 0.1008214 39.90828 0.9201970 trial21 17.697361 16.62739 1.0643497 19.99995 0.2998524 rewarding.object.colourgreen:trial21 65.350597 22.51360 2.9027170 19.99995 0.0088005 In both models the p-values are similar. However the effect of feeding count trends in the expected direction in our feeding count controlled model. In the effect plot below to the left we see that as feeding count increases the preference for the rewarding object colour also increases. What if I control for feeding count in just blue guppies. blue.guppies.test.data2 = test.feeding.data %&gt;% filter(rewarding.object.colour == &#39;blue&#39;) blue.guppies.test.data.model2 = lm(rewarding.object.preference ~ trial + feeding.count, data = blue.guppies.test.data2) term estimate std.error statistic p.value (Intercept) -18.679695 12.3858913 -1.508143 0.15 trial21 17.697361 9.7783850 1.809845 0.088 feeding.count 1.848784 0.9257908 1.996978 0.062 The p-values get smaller compared to when we first look at blue-trained guppies separately without controlling for feeding count but there is still no significant effect. Compare the above with the below to see how the values differ. blue.guppies.test.data.model = lm(rewarding.object.preference ~ trial, data = blue.guppies.test.data) term estimate std.error statistic p.value (Intercept) 1.841809 7.466217 0.2466857 0.808 trial21 17.697361 10.558825 1.6760729 0.111 "],
["model-7-does-feeding-count-predict-anything.html", "8 Model 7 - Does feeding count predict anything?", " 8 Model 7 - Does feeding count predict anything? ** These data are just the final preference trial** test.data.feeding.controlled.model1 = lm(rewarding.object.preference ~ feeding.count, data = retest.feeding.data) term estimate std.error statistic p.value feeding.count 2.617822 2.317213 1.129729 0.272 Testing for an effect of feeding count on rewarding object preference finds that there is no significant effect but the effect is in the expected direction. However,there is an effect of feeding on the time spent near both objects at re-test. test.data.feeding.controlled.model2 = lm(time.with.both.objects ~ feeding.count, data = retest.feeding.data) term estimate std.error statistic p.value feeding.count 3.285502 1.180529 2.783076 0.011 During the final test, a fish that had 0 feedings spent 115.299 seconds near both objects whereas fish that fed in 20 trials spent 181.009 seconds near both objects, a 1.6-fold increase. "]
]
